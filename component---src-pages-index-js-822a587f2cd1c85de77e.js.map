{"version":3,"file":"component---src-pages-index-js-822a587f2cd1c85de77e.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://gatsby-starter-blog/./node_modules/gatsby-plugin-dark-mode/ThemeToggler.js","webpack://gatsby-starter-blog/./node_modules/gatsby-plugin-dark-mode/index.js","webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar ThemeToggler = /*#__PURE__*/function (_React$Component) {\n  (0, _inheritsLoose2.default)(ThemeToggler, _React$Component);\n\n  function ThemeToggler() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n      theme: typeof window !== 'undefined' ? window.__theme : null\n    });\n    return _this;\n  }\n\n  var _proto = ThemeToggler.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    window.__onThemeChange = function () {\n      _this2.setState({\n        theme: window.__theme\n      });\n    };\n  };\n\n  _proto.toggleTheme = function toggleTheme(theme) {\n    window.__setPreferredTheme(theme);\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/_react.default.createElement(this.props.children, {\n      theme: this.state.theme,\n      toggleTheme: this.toggleTheme\n    });\n  };\n\n  return ThemeToggler;\n}(_react.default.Component);\n\nThemeToggler.propTypes = {\n  children: _propTypes.default.func.isRequired\n};\nvar _default = ThemeToggler;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\n\nvar _ThemeToggler = _interopRequireDefault(require(\"./ThemeToggler\"));\n\nexports.ThemeToggler = _ThemeToggler.default;","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `);\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author;\n  const social = data.site.siteMetadata?.social;\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          {author?.summary || null}\n          {` `}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Bio;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport { ThemeToggler } from \"gatsby-plugin-dark-mode\";\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`;\n  const isRootPath = location.pathname === rootPath;\n  let header;\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    );\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    );\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <ThemeToggler>\n        {({ theme, toggleTheme }) => (\n          <div className=\"flex items-center justify-center w-full mb-12\">\n            <label for=\"toogleA\" className=\"flex items-center cursor-pointer\">\n              <div class=\"mr-3 text-sm\">Light</div>\n              <div className=\"relative\">\n                <input\n                  id=\"toogleA\"\n                  type=\"checkbox\"\n                  className=\"sr-only\"\n                  onChange={(e) =>\n                    toggleTheme(e.target.checked ? \"dark\" : \"light\")\n                  }\n                  checked={theme === \"dark\"}\n                />\n                <div className=\"w-10 h-4 bg-gray-400 rounded-full shadow-inner\"></div>\n                <div className=\"dot absolute w-6 h-6 bg-white rounded-full shadow -left-1 -top-1 transition\"></div>\n              </div>\n              <div className=\"ml-3  text-sm\">Dark</div>\n            </label>\n          </div>\n        )}\n      </ThemeToggler>\n      <header className=\"global-header\">{header}</header>\n\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  );\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nconst Seo = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n};\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default Seo;\n","import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const posts = data.allMarkdownRemark.nodes;\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map((post) => {\n          const title = post.frontmatter.title || post.fields.slug;\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          );\n        })}\n      </ol>\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n"],"names":["module","exports","obj","key","value","Object","defineProperty","enumerable","configurable","writable","__esModule","_interopRequireDefault","require","_assertThisInitialized2","_inheritsLoose2","_defineProperty2","_react","_propTypes","ThemeToggler","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","default","theme","window","__theme","_proto","prototype","componentDidMount","_this2","__onThemeChange","setState","toggleTheme","__setPreferredTheme","render","createElement","props","children","state","Component","propTypes","func","isRequired","_default","_ThemeToggler","data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","header","location","title","isRootPath","pathname","Link","to","for","class","id","type","onChange","e","target","checked","Date","getFullYear","href","Seo","description","lang","meta","metaDescription","defaultTitle","htmlAttributes","titleTemplate","content","property","twitter","defaultProps","siteTitle","posts","allMarkdownRemark","nodes","style","listStyle","map","post","frontmatter","fields","slug","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","excerpt"],"sourceRoot":""}