{"version":3,"file":"component---src-templates-blog-post-js-a5277cac4a46f806c629.js","mappings":"wNA2FA,UAjFyB,SAAC,GAAwB,IAAD,IAArBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KACZC,EAAS,UAAGR,EAAKS,YAAYD,iBAApB,aAAG,EAA4BE,gBAAgBC,MAC9D,OACE,gBAAC,IAAD,CAAQZ,SAAUA,EAAUM,MAAOH,GACjC,gBAAC,IAAD,CACEG,MAAOL,EAAKS,YAAYJ,MACxBO,YAAaZ,EAAKS,YAAYG,aAAeZ,EAAKa,UAEpD,2BACEC,UAAU,YACVC,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYjB,EAAKS,YAAYJ,OAC1C,yBAAIL,EAAKS,YAAYS,MACrB,uBAAKJ,UAAU,QACb,gBAAC,IAAD,CACEA,UAAU,wEACVH,MAAOH,EACPW,IAAI,iBAGPnB,EAAKS,YAAYW,KAChB,uBAAKN,UAAU,kBACb,sBAAIA,UAAU,WACXd,EAAKS,YAAYW,KAAKC,KAAI,SAACC,GAAD,OACzB,sBACEC,IAAKD,EAAG,MACRR,UAAU,0JAGV,gBAAC,EAAAU,KAAD,CAAMC,GAAE,SAAWC,GAAAA,CAAUJ,GAArB,KAA+BA,SAK7C,MAEN,2BACEK,wBAAyB,CAAEC,OAAQ5B,EAAK6B,MACxCZ,SAAS,gBAEX,2BACA,8BACE,gBAAC,IAAD,QAGJ,uBAAKH,UAAU,iBACb,sBACEgB,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACG7B,GACC,gBAAC,EAAAkB,KAAD,CAAMC,GAAInB,EAAS8B,OAAOC,KAAMC,IAAI,QAApC,KACKhC,EAASG,YAAYJ,QAI9B,0BACGE,GACC,gBAAC,EAAAiB,KAAD,CAAMC,GAAIlB,EAAK6B,OAAOC,KAAMC,IAAI,QAC7B/B,EAAKE,YAAYJ,MADpB","sources":["webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\n// Utilities\nimport kebabCase from \"lodash/kebabCase\";\nimport Image from \"gatsby-image\";\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark;\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const { previous, next } = data;\n  const thumbnail = post.frontmatter.thumbnail?.childImageSharp.fluid;\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n          <div className=\"pb-5\">\n            <Image\n              className=\"object-none shadow rounded max-w-full h-auto align-middle border-none\"\n              fluid={thumbnail}\n              alt=\"Thumbnail画像\"\n            />\n          </div>\n          {post.frontmatter.tags ? (\n            <div className=\"tags-container\">\n              <ul className=\"taglist\">\n                {post.frontmatter.tags.map((tag) => (\n                  <li\n                    key={tag + `tag`}\n                    className=\"bg-blue-100 hover:bg-blue-200 text-blue-800 \n                      text-sm font-medium mr-2 px-2.5 py-0.5 rounded dark:bg-blue-200 dark:text-blue-800 dark:hover:bg-blue-300\"\n                  >\n                    <Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          ) : null}\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n        thumbnail {\n          childImageSharp {\n            fluid(maxWidth: 1280) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","thumbnail","frontmatter","childImageSharp","fluid","description","excerpt","className","itemScope","itemType","itemProp","date","alt","tags","map","tag","key","Link","to","kebabCase","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel"],"sourceRoot":""}