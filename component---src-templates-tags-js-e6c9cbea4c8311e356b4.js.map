{"version":3,"file":"component---src-templates-tags-js-e6c9cbea4c8311e356b4.js","mappings":"mLAiFA,UA1Ea,SAAC,GAAqC,IAAnCA,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACzBC,EAAQH,EAARG,IACR,EAA8BF,EAAKG,OAA3BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAIf,OACE,2BACE,gBAAC,IAAD,CAAQD,SAAUA,GAChB,0BAAKK,GACL,0BACGF,EAAMG,KAAI,YAAe,IAAD,EAAXC,EAAW,EAAXA,KAEJC,GADO,UAAGD,EAAKE,YAAYC,iBAApB,OAAG,EAA4BC,gBAAgBC,MAC7CL,EAAKM,OAAdL,MACAM,EAAUP,EAAKE,YAAfK,MACR,OACE,sBACEC,IAAKP,EACLQ,UAAU,iGAEV,gBAAC,EAAAC,KAAD,CAAMC,GAAIV,GACR,uBAAKQ,UAAU,+DACb,8BACE,0BAAKF,GACL,6BAAQP,EAAKE,YAAYU,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQd,EAAKE,YAAYa,aAAef,EAAKgB,SAE/CC,SAAS,wBAazB,gBAAC,EAAAP,KAAD,CAAMC,GAAG,SAAT","sources":["webpack://gatsby-starter-blog/./src/templates/tags.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Layout from \"../components/layout\";\nimport Image from \"gatsby-image\";\n// Components\nimport { Link, graphql } from \"gatsby\";\n\nconst Tags = ({ pageContext, data, location }) => {\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMdx;\n  const tagHeader = `${totalCount} node${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`;\n\n  return (\n    <div>\n      <Layout location={location}>\n        <h1>{tagHeader}</h1>\n        <ul>\n          {edges.map(({ node }) => {\n            const thumbnail = node.frontmatter.thumbnail?.childImageSharp.fluid;\n            const { slug } = node.fields;\n            const { title } = node.frontmatter;\n            return (\n              <li\n                key={slug}\n                className=\"rounded-xl  mx-auto  mt-10 bg-gradient-to-r p-[4px] from-[#FF512F] via-[#DD2476] to-[#9333EA]\"\n              >\n                <Link to={slug}>\n                  <div className=\"tagPost flex flex-col justify-between h-full rounded-lg p-2\">\n                    <header>\n                      <h4>{title}</h4>\n                      <small>{node.frontmatter.date}</small>\n                    </header>\n                    <section>\n                      <p\n                        dangerouslySetInnerHTML={{\n                          __html: node.frontmatter.description || node.excerpt,\n                        }}\n                        itemProp=\"description\"\n                      />\n                    </section>\n                  </div>\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n        {/*\n              This links to a page that does not yet exist.\n              You'll come back to it!\n            */}\n        <Link to=\"/tags\">All tags</Link>\n      </Layout>\n    </div>\n  );\n};\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMdx: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    allMdx(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1280) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["pageContext","data","location","tag","allMdx","edges","totalCount","tagHeader","map","node","slug","frontmatter","thumbnail","childImageSharp","fluid","fields","title","key","className","Link","to","date","dangerouslySetInnerHTML","__html","description","excerpt","itemProp"],"sourceRoot":""}